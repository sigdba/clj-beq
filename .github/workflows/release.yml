name: Release

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Download JDBC driver
      run: wget http://m.oiu.tv/build/clj-beq/ojdbc8.jar

    - name: Install JDBC driver
      run: mvn install:install-file -X -DgroupId=local -DartifactId=ojdbc8 -Dversion=19.3 -Dpackaging=jar -Dfile=ojdbc8.jar -DgeneratePom=true
      
    - name: Install dependencies
      run: lein deps
      
    - name: Build Ã¼berjar
      run: lein uberjar

    - name: Get the name of the built jar
      run: echo "BUILT_JAR=$(ls target/clj-beq*-standalone.jar|head)" >> "$GITHUB_ENV"

    - name: Get the name of the release jar
      run: echo "REL_JAR=$(echo $BUILT_JAR |sed -e s/SNAPSHOT-standalone/$GITHUB_RUN_NUMBER/)" >> "$GITHUB_ENV"

    - name: Get release name
      run: echo "REL_NAME=$(echo $REL_JAR |sed -e 's/.*\///' |sed -e 's/.jar$//')" >> "$GITHUB_ENV"

    - name: Get version
      run: echo "VERSION=$(echo $REL_NAME |sed -e 's/clj-beq-//')" >> "$GITHUB_ENV"

    - name: Rename built jar
      run: mv ${BUILT_JAR} ${REL_JAR}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "release/${{ env.VERSION }}"
        release_name: Release ${{ env.VERSION }}
        draft: false
        prerelease: false

    - name: Upload release jar
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: "${{ steps.create_release.outputs.upload_url }}"
        asset_path: "${{ env.REL_JAR }}"
        asset_name: "${{ env.REL_NAME }}.jar"
        asset_content_type: application/java-archive
